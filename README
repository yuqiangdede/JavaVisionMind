# JavaVisionMind

JavaVisionMind 是一组围绕计算机视觉与多模态能力构建的 Spring Boot 服务集合，涵盖目标检测、姿态识别、人脸识别、文搜图以及大模型推理等能力。项目采用多模块方式组织，可按需启停对应的服务。

## 环境准备

1. 安装 **JDK 17** 与 **Maven 3.8+**。
2. 下载所需的模型与 OpenCV 运行时库，并通过环境变量 `VISION_MIND_PATH` 指定资源根目录。应用会基于该变量寻找模型与原生库，例如：

   ```bash
   # Windows PowerShell
   setx VISION_MIND_PATH "F:\\TestSth\\JavaVisionMind\\resource"

   # Linux / macOS shell
   export VISION_MIND_PATH=/opt/JavaVisionMind/resource
   ```

   典型的目录结构如下：

   ```text
   ${VISION_MIND_PATH}
   └── lib
       └── opencv
           ├── opencv_java490.dll   # Windows 动态库
           └── libopencv_java490.so # Linux 动态库
   ```

3. 根据操作系统确认 `opencv_java490` 动态库可被 Java 加载（已在核心服务中根据系统类型自动选择 `.dll` 或 `.so` 文件）。

4. 从release中下载resource.7z，解压到vision-mind-common同级目录，例如这种路径 F:\TestSth\JavaVisionMind\resource\yolo\model\yolo.onnx F:\TestSth\JavaVisionMind\vision-mind-common\src\main\java\...

## 模块简介

| 模块 | 说明 |
| --- | --- |
| `vision-mind-yolo-core` | 封装 YOLOv11/FAST-SAM 推理逻辑，提供图片检测、姿态识别、分割等能力。 |
| `vision-mind-yolo-app` | 基于 Spring Boot 的 YOLO REST 服务入口。 |
| `vision-mind-ffe-app` | 人脸检测与特征提取相关服务。 |
| `vision-mind-reid-app` | 人员重识别服务，实现跨镜追踪。 |
| `vision-mind-tbir-app` | 文本检索图片（Text-Based Image Retrieval）能力。 |
| `vision-mind-llm-core` | 面向 OpenAI / Ollama 的大语言模型接入。 |
| `vision-mind-common` | DTO、工具类等公共依赖。 |
| `vision-mind-test-sth` | 开发阶段的验证与示例代码。 |

## 快速启动

以 YOLO 服务为例：

```bash
mvn -pl vision-mind-yolo-app spring-boot:run
```

大模型服务入口位于 `vision-mind-llm-core` 模块，可通过以下方式启动：

```bash
mvn -pl vision-mind-llm-core spring-boot:run
```

服务默认端口与上下文路径可在各模块的 `application.properties` 中调整。

## 大模型配置

- 在 `vision-mind-llm-core/src/main/resources/application.properties` 中配置对接信息。
- 同时填写 OpenAI 与 Ollama 时，会优先调用 OpenAI 配置；仅填写 Ollama 时则回退至本地服务。
- 示例：

  ```properties
  # 任选一个大模型服务进行配置
  ollama.base-url=http://127.0.0.1:11434
  ollama.chat.options.model=gemma3:1b

  openai.base-url=https://api.openai.com/v1/chat/completions
  openai.api-key=YOUR_API_KEY
  openai.chat.options.model=gpt-4o-mini
  ```

## 调试与测试

仓库根目录提供 `JavaVisionMind.postman_collection.json`，可导入 Postman/Apifox 进行接口调试。

## Roadmap

- 支持基于 LLaMA 的服务部署与流式输出。
- 向量存储在当前 Lucene 实现基础上，计划补充内存态存储方案。
- YOLO 视频流解析能力（`vision-mind-yolo-core` 中保留实现草稿）。

欢迎提交 Issue 或 PR 进一步完善项目。
